%EE511 Project 3
%Author: Yong Wang <yongw@usc.edu>

%% [Testing Faith]
f = fopen('old-faithful.txt');
d = textscan(f, '%d %f %f', 'HeaderLines', 26);
fclose(f);
duration = d{1,2};
waiting = d{1,3};
%scatter(duration,waiting);
plot(duration,waiting,'.', 'MarkerSize',12);
title('Old Faithful Geyser Eruptions Plot');
xlabel('Duration of eruptions (mins)');
ylabel('Waiting time to next eruption (mins)');
%k-means clustering, k=2%
X = [duration, waiting];
[idx,C] = kmeans(X,2);
plot(X(idx==1,1),X(idx==1,2), 'r.', 'MarkerSize',12);
hold on;
plot(X(idx==2,1),X(idx==2,2), 'b.', 'MarkerSize',12);
plot(C(:,1),C(:,2),'kx','MarkerSize',15,'LineWidth',3)
title('Old Faithful Geyser Eruptions Plot with K-means Clustering');
xlabel('Duration of eruptions (mins)');
ylabel('Waiting time to next eruption (mins)');
legend(sprintf('Cluster 1 (%d points)',length(X(idx==1,1))),...
       sprintf('Cluster 2 (%d points)',length(X(idx==2,1))),...
       'Centroids','Location','NW');
hold off

%% [EM]
mu_RNG = [4 2;-3 -5];
sigma_RNG = cat(3,[4 0;0 1],[3 0;0 3]);
p_RNG = ones(1,2)/2;
%mu_RNG = [3 2;-3 -4];
%sigma_RNG = cat(3,[3 0;0 3],[4 0;0 4]);
%p_RNG = ones(1,2)/2;

gm = gmdistribution(mu_RNG,sigma_RNG,p_RNG);
gmPDF = @(x,y)pdf(gm,[x y]);
rng(1);
%Use GMM RNG to generate sample points
s = 500; %number of sampling points
Y = random(gm,s);


figure;
axis([-10 10 -10 10]);
li = linspace(-10, 10, 100);
li2 = linspace(-10, 10, 100);
[A B] = meshgrid(li, li);
grid = [A(:), B(:)];


z1 = pdf(gm, grid);
z1 = reshape(z1, 100, 100);
contour(li, li2, z1);
hold on
scatter(Y(:,1),Y(:,2), 'b.')
title('Sample points generated by GMM RNG');
legend(sprintf('GMM mu=[%1.2f %1.2f; %1.2f %1.2f]',mu_RNG(1,1),mu_RNG(1,2),...
       mu_RNG(2,1),mu_RNG(2,2)),...
       'Location','NW');
xlabel('x');
ylabel('y');
hold off

%use EM GMM for old faithful
% Y = X; s = length(X);
% axis auto;
% li = linspace(min(Y(:,1))*0.9, max(Y(:,1))*1.1, 100);
% li2 = linspace(min(Y(:,2))*0.9, max(Y(:,2))*1.1, 100);
% [A B] = meshgrid(li, li2);
% grid = [A(:), B(:)];

%Use ME to evaluate parameter for sample points Y
k = 2;  % The number of subpopulation.

%randomly select k points as inital mean
i = randi(s, k, 1);
mu = Y(i(1:k), :);
%initial sigma
sigma = [];
for i = 1 : k
    sigma{i} = cov(Y);
end
%inital p
p = ones(1, k)/k;
%record which cluster the data points belong to
idx = zeros(s, k);
P = zeros(s, k);
%search for EM
for i = 1 : 3000

    Z = zeros(s, k); %record value from pdf
    for j = 1 : k
        gm = gmdistribution(mu(j, :), sigma{j}, p(j));
        % Evaluate the Gaussian for all data points for cluster 'j'.
        Z(:,j) = pdf(gm,Y);
    end
    P = bsxfun(@rdivide, Z, sum(Z, 2));
    
    %start maximization
    pmu = mu;
    for j=1:k %for each cluster
        p(j) = mean(P(:,j), 1);
        mu(j,:) = (P(:, j)' * Y) ./ sum(P(:,j), 1);
        %calculate covariance
        Ym = bsxfun(@minus, Y, mu(j, :));
        sigma_k = zeros(2);
        for t = 1 : s
            sigma_k = sigma_k + (P(t, j) .* (Ym(t, :)' * Ym(t, :)));
        end
        sigma{j} = sigma_k ./ sum(P(:, j));
    end
    fprintf('%d: mu=[%1.2f %1.2f;%1.2f %1.2f] p=[%1.2f %1.2f]\n',...
            i, mu(1,1),mu(1,2),mu(2,1),mu(2,2),p(1),p(2));
    if(mu == pmu)
        break;
    end
end
%scatter plot
figure;

gm = gmdistribution(mu(1, :), sigma{1}, p(1));
z1 = pdf(gm, grid);
gm = gmdistribution(mu(2, :), sigma{2}, p(2));
z2 = pdf(gm, grid);
z1 = reshape(z1, 100, 100);
z2 = reshape(z2, 100, 100);
cluster1 = (find(P(:,1)>0.5));
cluster2 = (find(P(:,2)>0.5));
plot(Y(cluster1(:),1), Y(cluster1(:),2), 'b.');
hold on
plot(Y(cluster2(:),1), Y(cluster2(:),2), 'r.');
hold on
contour(li, li2, z1);
contour(li, li2, z2);
legend(sprintf('Cluster 1 mu=[%1.2f %1.2f]',mu(1,1),mu(1,2)),...
       sprintf('Cluster 2 mu=[%1.2f %1.2f]',mu(2,1),mu(2,2)),...
       'Location','NW');
title('Estimated GMM by EM');
xlabel('x');
ylabel('y');
%% [Clusters of Text]

%T = readtable('nips-87-92.csv');
[r, c] = size(T);
fid = T{2:r,2};
D = T{2:r, 3:c};
k = 12;
avd = zeros(k,1);
v = 700^4;
for i=1:10
    [idx, centroid, sumd] = kmeans(D,k);
    for j=1:k
        avd(j,1) = length(find(idx==j));
    end
    if var(avd) < v
        v = var(avd);
        avd2 = avd;
        res = idx;
        fprintf("i=%d var=%d\n",i, v);
    end
    
end
idx = res;

for i=1:k
    doc = find(idx==i);
    fprintf("\n\nCluster %d (%d docs)\n---------\n", i, length(doc));
    for j=1:length(doc)
        fprintf("%s ", fid{doc(j)});
        if(mod(j,10) == 0)
            fprintf("\n");
        end
    end
end
figure;
plot([1:k], avd);
% silhouette(D,idx);
xlabel("Number of cluster (k value)");
ylabel('Average distance to centroid within cluster');
title('Elbow point');

% legend(sprintf('k=%d', k),'Location','NE');

% f = fopen('nips-87-92.csv');
% t = readtable('nips-87-92.csv');
% headline = fgetl(f);
% words = textscan(headline, "%s",'Delimiter',',','EmptyValue',-Inf);
% while ~feof(f)
%     l = fgetl(f);
%     [fid, pos] = textscan(l,"%d,%s,", 'Delimiter', ',');
%     %fprintf("fid=%d\n",fid{1,1});
%     c = textscan(l(pos+1:end), "%d", 'Delimiter', ',');
% end
% fclose(f);


